#+TITLE: Network-related helpers.

End goal:
- connect guests =cp=, =wk-1= and =wk-2= to a bridge on the host
- allow internet access to guests by routing and masquerading packets
  through the host interface.

Bridge:
- Name :: =qvm0=
- Subnet :: 10.42.0.1/24
- TAP ports :: =qvm0t0= =qvm0t1= =qvm0t2=

IP addresses:
| Guest |         IP | TAP    |
|-------+------------+--------|
| cp    | 10.42.0.10 | qvm0t0 |
| wk-1  | 10.42.0.11 | qvm0t1 |
| wk-2  | 10.42.0.12 | qvm0t2 |


Step-by-step approach:
  1. [X] Single VM with TAP device.
     - [X] Webserver on =cp= reacheable from host
     - [X] SSH on =cp= reachable from host
     - [X] Internet reachable from =cp=
  2. [X] Two VMs on the same bridge.
     - [X] =cp= webserver reachable from =wk-1= and host
  3. Three VMS on bridge, that can reach the outside internet.

Since I run unprivileged =qemu= in a toolbox, I chose to manage the host virtual interfaces independently of qemu invocations.

* VM reachable from a host tap interface

For the host setup:
- =setup-host.sh= (firewall rules)
  - allow packet forwarding from the =qvm0= interface to the outside world
  - masquerade (ie NAT, with the public-facing address not known beforehand)
- =tap-up.sh=
- =tap-down.sh=

For the guest:
- Firewalld disabled altogether, to avoid interfering with k8s
  - =sudo systemctl disable --now firewalld.service=
- =setup-guest.sh=

** Sources
I found the following online documentation sources useful:

- Arch wiki
  - [[https://wiki.archlinux.org/title/QEMU/Advanced_networking][Advanced QEMU networking]]
  - [[https://wiki.archlinux.org/title/Firewalld#][Firewalld]]
- QEMU
  - [[https://www.qemu.org/docs/master/system/invocation.html#hxtool-5][Network options]]
  - [[https://wiki.qemu.org/Documentation/Networking][Set up networking]]
- [[https://firewalld.org/][Firewalld]]
- [[https://networkmanager.dev/docs/][NetworkManager]]
- [[https://wiki.nftables.org/wiki-nftables/index.php/Main_Page][nftables Wiki]]
